plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name = 'GeckoLib'
		url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
		content {
			includeGroupByRegex("software\\.bernie.*")
			includeGroup("com.eliotlash.mclib")
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Geckolib
	modImplementation("software.bernie.geckolib:geckolib-fabric-${minecraft_version}:${geckolib_version}")
	implementation("com.eliotlash.mclib:mclib:20")

	include modApi("teamreborn:energy:${project.energy_version}")
	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// https://mvnrepository.com/artifact/org.json/json
	implementation group: 'org.json', name: 'json', version: '20240303'

	implementation 'com.pi4j:pi4j-core:2.3.0'
	implementation 'com.pi4j:pi4j-plugin-raspberrypi:2.3.0'
	implementation 'com.pi4j:pi4j-plugin-pigpio:2.3.0'
	implementation 'com.pi4j:pi4j-plugin-linuxfs:2.3.0'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

def libsToInclude = ["pi4j-plugin-raspberrypi-2.3.0.jar",
					 "pi4j-plugin-pigpio-2.3.0.jar",
					 "pi4j-library-pigpio-2.3.0.jar",
					 "pi4j-core-2.3.0.jar",
					 "gson-2.10.jar",
					 "json-20240303.jar"

					 //"jsch-0.1.55.jar",
					 //"pi4j-plugin-linuxfs-2.3.0.jar",
					 //"pi4j-library-linuxfs-2.3.0.jar"
]

jar {
	from("LICENSE") {
		rename { "${it}_${archives_base_name}"}
	}
	manifest {
		attributes([
				"MixinConfigs": "aec-hydro.mixins.json"
		])
	}

	tasks.withType(Jar).configureEach {
		duplicatesStrategy = DuplicatesStrategy.INCLUDE
	}

	from { configurations.runtimeClasspath.collect { libsToInclude.contains(it.name) ? zipTree(it) : it; }}
}


// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {

	}
}